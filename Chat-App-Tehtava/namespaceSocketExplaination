Explain namespaces in Socket.IO?
namespace in Socket.IOIn Socket.IO, namespaces are ways to create separate communication channels within a single Socket, which allows to split real-time logics 
by features and/or modules. This is particulary similar to how routes migght be used in web servers.

Socket.IO has different namespaces, for example
1. Default namespace: it is the root '/' namespace and and all clients are connected here unless specified otherwise.
2. Custom namespaces: Is where custom namespaces can be created by specifying a name when creating a new namespace on the server side. 
3. Purpose: This isolates different events and logics, which reduces events' name collisions and basically enables good code practices.

How they are different from rooms and how could you use those in your app?
Rooms is Socket.IO are sub-channels under a namespace, which enables the grouping of the Sockets.
    =>Rooms and namespaces are different in the following ways:
        1. namespaces are broader and rooms are more specific.
        2. names are used to separate different parts of an application, whereas rooms are used to group clients within the namespace.

How can I use namespaces and rooms in my app?
    =>To use namespaces and rooms in the app, these steps can be followed:
        1. Create a namespace on the server side using io.of('/namespaceName').
        2. On the client side, connect to the namespace using io('/namespaceName').
        3. To create or join a room within a namespace, use socket.join('roomName') on the server side.
        4. To send messages to a specific room, use io.of('/namespaceName').to('roomName').emit('event', data).
        5. To leave a room, use socket.leave('roomName').